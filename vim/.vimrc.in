" Default settings
syntax on
set number
set encoding=utf-8
set nocompatible
set clipboard=unnamed
set backspace=indent,eol,start
set expandtab
set tabstop=4
set shiftwidth=2
set textwidth=80
set smartindent
set incsearch

filetype off

" NERD tree
map <C-n> :NERDTreeToggle<CR>
map <Leader>n <plug>NERDTreeTabsToggle<CR>
""let g:nerdtree_tabs_open_on_console_startup=1
""autocmd vimenter * NERDTree
""autocmd VimEnter * wincmd p
""autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" Highlight groups
set hlsearch
highlight BadWhitespace ctermbg=red guibg=red
highlight OverLength ctermbg=red ctermfg=white guibg=#592929
hi Search cterm = NONE ctermfg=grey ctermbg=DarkMagenta

" Matching over legth
match OverLength /\%81v.\+/
set colorcolumn=81

" Handy strip function
function! Strip(input_string)
        return substitute(a:input_string, '^\s*\(.\{-}\)[\s\n]*$', '\1', '')
endfunction

${BODY}

" Enable folding
set foldmethod=indent
set foldlevel=99
nnoremap <space> za
let g:SimplyFold_docstring_preview=1

" Remap pane movement
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Remap parenthesis expansion
inoremap (     ()<Esc>i
inoremap {     {}<Esc>i
inoremap [     []<Esc>i
inoremap <     <><Esc>i
inoremap "     ""<Esc>i
inoremap '     ''<Esc>i

" Jenkinsfile
au BufRead,BufNewFile Jenkinsfile,Jenkinsfile.*
        \ setf groovy |
        \ set tabstop=2 |
		\ set shiftwidth=2 | 
		\ set expandtab |
        \ set smartindent |
  		\ match BadWhitespace /^\t\+/ |
		\ match BadWhitespace /\s\+$/ |
		\ set fileformat=unix

" C
au BufRead,BufNewFile *.c,*.h
    \ set tabstop=4 |
		\ match BadWhitespace /\s\+$/ |
		\ set fileformat=unix

" Web indentation
au BufNewFile,BufRead *.js, *.html, *.css
		\ set tabstop=2 |
		\ set softtabstop=2 |
		\ set shiftwidth=2

filetype plugin indent on 	" required

"" save when losing focus
au FocusLost * :silent! wall

" Leader
let mapleader = ","
let maplocalleader = "\\"


" Make sure Vim returns to the same line when you reopen a file.
" " Thanks, Amit
augroup line_return
     au!
     au BufReadPost *
       \ if line("'\"") > 0 && line("'\"") <= line("$") |
        \     execute 'normal! g`"zvzz' |
        \ endif
augroup END

" substitute
map <c-s> :%s
map <c-s> :s/

" Zip Right
" "
" " Moves the character under the cursor to the end of the line.  Handy when you
" " have something like:
" "
" "     foo
" "
" " And you want to wrap it in a method call, so you type:
" "
" "     println()foo
" "
" " Once you hit escape your cursor is on the closing paren, so you can 'zip' it
" " over to the right with this mapping.
" "
" " This should preserve your last yank/delete as well.
nnoremap zl :let @z=@"<cr>x$p:let @"=@z<cr>


nnoremap <leader>et :vsplit ~/.tmux.conf<cr>
nnoremap <leader>ev :vsplit ~/.vimrc<cr>

" Made D behave
nnoremap D d$


" Easier to type, and I never use the default behavior.
noremap H ^
noremap L $
vnoremap L g_

" Heresy
inoremap <c-i> <esc>I
inoremap <c-a> <esc>A
cnoremap <c-i> <home>
cnoremap <c-a> <end>

"FuzzyFinder
inoremap <c-T> <esc>:FZF<ENTER>
nnoremap <c-T> <esc>:FZF<ENTER>

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

map <Leader> <Plug>(easymotion-prefix)

" <Leader>f{char} to move to {char}
map  <Leader>f <Plug>(easymotion-bd-f)
nmap <Leader>f <Plug>(easymotion-overwin-f)

" s{char}{char} to move to {char}{char}
nmap s <Plug>(easymotion-overwin-f2)

" Move to line
map <Leader>L <Plug>(easymotion-bd-jk)
nmap <Leader>L <Plug>(easymotion-overwin-line)

" Move to word
map  <Leader>w <Plug>(easymotion-bd-w)
nmap <Leader>w <Plug>(easymotion-overwin-w)


" Gif config
map <Leader>l <Plug>(easymotion-lineforward)
map <Leader>j <Plug>(easymotion-j)
map <Leader>k <Plug>(easymotion-k)
map <Leader>h <Plug>(easymotion-linebackward)

" Keep search matches in the middle of the window.
nnoremap n nzzzv
nnoremap N Nzzzv
